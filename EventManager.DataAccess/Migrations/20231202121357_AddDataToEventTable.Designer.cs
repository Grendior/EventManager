// <auto-generated />
using System;
using EventManager.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventManager.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231202121357_AddDataToEventTable")]
    partial class AddDataToEventTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventManager.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a62b2f54-ade8-4a5c-8df0-0941608085f5"),
                            Capacity = 30,
                            Date = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9098),
                            EndTime = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9155),
                            StartTime = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9153),
                            Title = "Tytuł Wydarzenia"
                        },
                        new
                        {
                            Id = new Guid("8ae4fd63-5f1c-47f7-9f07-e053e28ead71"),
                            Capacity = 40,
                            Date = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9161),
                            EndTime = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9166),
                            StartTime = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9164),
                            Title = "Tytuł Wydarzenia 2"
                        },
                        new
                        {
                            Id = new Guid("eb97e843-3985-4341-ba35-0bcf5eda5176"),
                            Capacity = 50,
                            Date = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9171),
                            EndTime = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9177),
                            StartTime = new DateTime(2023, 12, 2, 13, 13, 56, 856, DateTimeKind.Local).AddTicks(9174),
                            Title = "Tytuł Wydarzenia 3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
